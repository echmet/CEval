#ifndef MYSTD_MEM_RELEASE_GUARD_H
#define MYSTD_MEM_RELEASE_GUARD_H

//=============================================================================
//-----------------------------------------------------------------------------

// Notes:


//-----------------------------------------------------------------------------

//=============================================================================
//-----------------------------------------------------------------------------

// Includes:

#include "_SHARED\MyStd\_MyStdUnit.set"
#include "_SHARED\MyStd\stddefs.h"

#include "_SHARED\MyStd\mem\base.h"

//=============================================================================
//-----------------------------------------------------------------------------

namespace myStd {

namespace mem {

//=============================================================================
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
template<typename T, typename Allocator>
inline Guard<T, Allocator> &
Release (
  Guard<T, Allocator> &, 
  Allocator            = Allocator()
);

//-----------------------------------------------------------------------------
template<typename T, typename Allocator>
inline Guard<T, Allocator> &
Release (
  std::nothrow_t       ,
  Guard<T, Allocator> &,
  Allocator            = Allocator()
);

//-----------------------------------------------------------------------------

// > mpl helpers  >

//-----------------------------------------------------------------------------

namespace inside {

//-----------------------------------------------------------------------------
template<typename T, typename Allocator, bool b> 
struct release_guard_helper;

} // namespace

//-----------------------------------------------------------------------------

// < mpl helpers <

//-----------------------------------------------------------------------------

//=============================================================================
//-----------------------------------------------------------------------------

} // namespace

} // namespace

//-----------------------------------------------------------------------------
#endif //header
